"""
풀이시간: 10분

<input>
land: N x 4행으로 이루어진 2차원 배열
- N : 100,000 이하의 자연수
- 열의 개수: 4개
- 점수: 100이하의 자연수

<solution>
한 행씩 내려올 때, 같은 열을 연속해서 밟을 수 없음
land[i][j]를 land[i][j]를 밟을 때 얻을 수 있는 점수의 최댓값으로 바꿔주기

<시간 복잡도>
O(N): 총 3번의 for문을 돈다고 해도, 연산횟수는 (n-1) * 4 * 4로 최악의 경우 약 1,600,000임으로 시간내에 통과가 가능하다
"""
from typing import List


def solution(land: List[List[int]]):
    """
    land: N x 4행으로 이루어진 2차원 배열
    """
    n = len(land)
    for i in range(1, n):
        for j in range(4):
            prev = 0 # 이전 행에서 얻을 수 있는 점수의 최댓값
            for k in range(4):
                if j != k: # 이전 행과 같은 열을 밟을 수 없음
                    if land[i-1][k] > prev:
                        prev = land[i-1][k]
            land[i][j] += prev

    return max(land[-1])

"""
정확성  테스트
테스트 1 〉	통과 (4.12ms, 10.4MB)
테스트 2 〉	통과 (3.11ms, 10.5MB)
테스트 3 〉	통과 (3.11ms, 10.5MB)
테스트 4 〉	통과 (3.25ms, 10.4MB)
테스트 5 〉	통과 (3.28ms, 10.5MB)
테스트 6 〉	통과 (3.13ms, 10.2MB)
테스트 7 〉	통과 (3.07ms, 10.3MB)
테스트 8 〉	통과 (3.12ms, 10.4MB)
테스트 9 〉	통과 (3.10ms, 10.4MB)
테스트 10 〉	통과 (3.13ms, 10.5MB)
테스트 11 〉	통과 (3.08ms, 10.3MB)
테스트 12 〉	통과 (3.09ms, 10.3MB)
테스트 13 〉	통과 (3.10ms, 10.1MB)
테스트 14 〉	통과 (3.28ms, 10.4MB)
테스트 15 〉	통과 (3.19ms, 10.3MB)
테스트 16 〉	통과 (3.09ms, 10.4MB)
테스트 17 〉	통과 (3.08ms, 10.3MB)
테스트 18 〉	통과 (3.07ms, 10.4MB)

효율성  테스트
테스트 1 〉	통과 (314.70ms, 32.4MB)
테스트 2 〉	통과 (317.33ms, 32.2MB)
테스트 3 〉	통과 (316.18ms, 32.5MB)
테스트 4 〉	통과 (316.38ms, 32.3MB)
"""